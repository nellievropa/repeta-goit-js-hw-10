{"mappings":"AASA,MAAMA,EAASC,SAASC,cAAc,cAChCC,EAAOF,SAASC,cAAc,YACpCF,EAAOI,iBAAiB,UAExB,SAAuBC,GACnBA,EAAIC,iBAEoB,MAAlBC,MAAEA,EAAKC,KAAEA,GAASH,EAAII,cAAcC,UAmB9C,SAAoBC,EAAMH,GAK4B,OAA3CI,MACH,mFAAsDD,UAAaH,KACrEK,MAAMC,IAEJ,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKG,YAEzB,OAAOH,EAAKI,MAAM,G,EA9BtBC,CAAWZ,EAAMa,MAAOZ,EAAKY,OAC5BP,MAAKQ,GAASlB,EAAKmB,UAAyBD,EAAKE,SAASC,YA8CpDC,KAAI,EAACC,KAACA,EAAMC,KAAIC,UAACA,EAAWC,WAAUC,KAACA,EAAIC,KAAEA,OAAa,2BACjDA,WAAcD,mBACrBA,sBACCJ,uBACAE,sBACFI,KAAK,MAlDZC,OAAMC,GAASC,QAAQC,IAAIF,KAC5BC,QAAQC,IAAI7B,GACZ4B,QAAQC,IAAI5B,E","sources":["src/js/04-rysych-rest-api.js"],"sourcesContent":["// fetch('https://swapi.dev/api/people')\n//     .then(r => r.json())\n// .then(console.log);\n\n\n// const API_KEY_WEATHER = 'bc046e36b7d642a2a0294826231312';\n// fetch('http://api.weatherapi.com/v1')\n//     .then(r => r.json())\n//     .then(console.log);\nconst search = document.querySelector('.js-search');\nconst list = document.querySelector('.js-list')\nsearch.addEventListener('submit', onShowWeather);\n\nfunction onShowWeather(evt) {\n    evt.preventDefault();\n    // робимо деструктуризацію по name\n    const { query, days } = evt.currentTarget.elements;\n    getWeather(query.value, days.value)\n    .then(data => (list.innerHTML = createMarkup(data.forecast.forecastday)))\n    .catch(error => console.log(error));\n    console.log(query);\n    console.log(days);\n}\n\n\n// function createMarkup(array) {\n  \n//     return array.map( => `<li>\n//     <img src=\"\" alt=\"\">\n//             <p></p>\n//         <h2></h2>\n//         <h3></h3>\n//     </li>`).join('')\n// }\n\nfunction getWeather(city, days) {\n    // http://api.weatherapi.com/v1/forecast.json?key=bc046e36b7d642a2a0294826231312&q=Paris&days=7\n    const BASE_URL = 'http://api.weatherapi.com/v1';\n    const API_KEY_WEATHER = 'bc046e36b7d642a2a0294826231312';\n// щоб далі можна було парсити цей проміс його треба повернути!!!RETURN\n    return fetch(\n        `${BASE_URL}/forecast.json?key=${API_KEY_WEATHER}&q=${city}&days=${days}`\n    ).then((resp) => {\n        // console.log(resp.json())\n        if (!resp.ok) {\n            throw new Error(resp.statusText);\n        }\n        return resp.json();\n    });\n  \n}\n// викликаємо функцію і парсимо її далі!!!\n// getWeather('Lviv', 7)\n//     .then(data => console.log(data))\n//     .catch(error => console.log(error));\n// у відповіді ми отримаємо Ок: зі статусом тру або фальс\n// і його треба зразу опрацювати, щоб знати той статус, і робиться це в першому then\n// якщо відповідь не Ок, робимо примусову помилку зі статусом із Responce\n// if (!responce.ok) { throw new Error(responce.statusText)}\n    \n// створюємо функцію, яка дасть нам розмітку нашої картки - в якій ми побачимо відповідь на наш запит\n\nfunction createMarkup(arr) {\n// приклад вкладеної деструктуризації\nreturn arr.map(({date, day:{avgtemp_c, condition:{text, icon} }}) => `<li>\n        <img src=\"${icon}\" alt=\"${text}\">\n        <p>${text}</p>\n        <h2>${date}</h2>\n        <h3>${avgtemp_c}</h3>\n    </li>`).join('')\n}\n\n// переклад з англійської на українську\n\n// mapping =[{input : 'київ', output : 'kiev' }]"],"names":["$008bcd4d5c4ecb23$var$search","document","querySelector","$008bcd4d5c4ecb23$var$list","addEventListener","evt","preventDefault","query","days","currentTarget","elements","city","fetch","then","resp","ok","Error","statusText","json","$008bcd4d5c4ecb23$var$getWeather","value","data","innerHTML","forecast","forecastday","map","date","day","avgtemp_c","condition","text","icon","join","catch","error","console","log"],"version":3,"file":"04-rysych-rest-api.8a6a0167.js.map"}