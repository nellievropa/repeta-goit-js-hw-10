{"mappings":"AACA,IAAMA,SAAW,gCACXC,SAAW,qBAEXC,QAAU,mCACVC,KAAOC,SAASC,cAAc,YAiF9BC,OAASF,SAASC,cAAc,aAClCE,YAAc,IACdC,QAAU,CACZC,KAAM,KACNC,WAAY,QACZC,UAAW,GAGTC,SAAW,IAAIC,qBAAqBC,OAAQN,SAChD,SAASM,OAAOC,EAASC,GACrBD,EAAQE,SAAQ,SAACC,GACTA,EAAMC,gBAGNC,YADAb,aAAe,GAEdc,MAAK,SAACC,GAEiBnB,KAAnBoB,mBAAmB,YAAaC,aAAaF,EAAKG,UAG/CH,EAAKI,OAASJ,EAAKK,aACnBX,EAASY,WAAWtB,O,IAGnCuB,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,E,OAMO,SAA9BN,aAAaS,GAClB,OAAOA,EAAIC,KAAI,SAAAC,G,IAAGC,EAAWD,EAAXC,YAAaC,EAAKF,EAALE,M,MAAY,sDACqBC,OAArBF,EAAY,WAC7CE,OADsDD,EAAM,oBACtDC,OAAND,EAAM,mB,IACRE,KAAK,G,CAGjB,SAASnB,c,IAAYM,EAAAc,UAAAC,OAAA,YAAAD,UAAA,GAAMA,UAAA,GAAD,EACtB,OAAOE,MAAM,GAAcJ,OAAXtC,UAA+BsC,OAApBrC,SAAS,aAA2BqC,OAAhBpC,QAAQ,UAAaoC,OAALZ,IAAQL,MAAK,SAAAsB,GACxE,IAAKA,EAAKC,GACN,MAAM,IAAIC,MAAMF,EAAKG,YAEzB,OAAOH,EAAKI,M,IAMoF3B,cACnGC,MAAK,SAACC,GAEyBnB,KAAnBoB,mBAAmB,YAAaC,aAAaF,EAAKG,UAE1Bb,SAApBoC,QAAQ1C,O,IAIxBuB,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,E","sources":["src/js/06-infifnfty-scroll.js"],"sourcesContent":["\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst ENDPOINT = 'trending/movie/day';\n// const API_KEY = '345007f9ab440e5b86cef51be6397df1';\nconst API_KEY = '75a59728a8a611489d2b48a322755689';\nconst list = document.querySelector(\".js-list\");\n// const loadMore = document.querySelector('.js-load');\n// створюємо змінну, яка буде зберігати номер сторінки\n// let currentPage = 1;\n\n// let options = {\n//   root: null,\n//   rootMargin: \"200px\",\n//   threshold: 1.0,\n// };\n\n// let observer = new IntersectionObserver(callback, options);\n// function callback(evt) {\n//     console.log(evt)\n// }\n// // на екземплярі класа треба викликати цей метод\n\n// const target = document.querySelector('.js-guard');\n\n// loadMore.addEventListener('click', onload)\n\n// ця функція має відповідати за номер сторінки\n// Обов'язково треба робити перевірку, чи є можливість завантажити наступну сторінку!\n// function onload() {\n//     // після того, як натисли кнопку Лоад море, збільшуємо номер її на 1 \n//     currentPage += 1\n//     // викликати функцію getTranding і передати в неї поточну сторінку\n//     getTranding(currentPage)\n//         .then((data) => {\n//             list.insertAdjacentHTML('beforeend', createMarkup(data.results))\n          \n//             if (data.page === data.total_pages) {\n//                 loadMore.hidden = true;\n//             }\n//     })\n//     .catch(error => console.log(error));\n// }\n\n// function getTranding(page=1) {\n//     return fetch(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}&page=${page}`).then(resp => {\n//         if (!resp.ok) {\n//             throw new Error(resp.statusText)\n//         }\n//         return resp.json();\n//     });\n// }\n\n// // щоб показати кнопку після першої розмітки додаємо в перший then {}\n// // пагінація повинна віддавати номер поточної сторінки і загальну кількість сторінок - і нам треба перевірити на якій ми зараз\n// getTranding()\n//     .then((data) => {\n// list.insertAdjacentHTML('beforeend', createMarkup(data.results))\n//           // спостерігач спостерігай за нашим Target oject\n//             observer.observe(target)\n//         if (data.page !== data.total_pages) {\n//         loadMore.hidden = false\n//     }})\n//     // просто подивитися, що прийшло\n//     // .then(data => console.log(data))\n//     .catch(error => console.log(error));\n\n// function createMarkup(arr){\n//     return arr.map(({ poster_path, title }) => `<li>\n//     <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\">\n//         <h2>${title}</h2>\n//     </li>`).join('')\n// }\n\n\n\n// let counter = 0\n// document.addEventListener('scroll', onScroll)\n\n\n// function onScroll() {\n//     counter += 1\n//     console.log(counter)\n// }\n\n\n\nconst target = document.querySelector('.js-guard');\nlet currentPage = 498;\nlet options = {\n  root: null,\n  rootMargin: \"300px\",\n  threshold: 1.0,\n};\n\nlet observer = new IntersectionObserver(onLoad, options);\nfunction onLoad(entries, observer) {\n    entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n            // console.log(entries)\n            currentPage += 1;\n            getTranding(currentPage)\n            .then((data) => {\n        // відмальовка нашої сторінки\n            list.insertAdjacentHTML('beforeend', createMarkup(data.results))\n                // observer.observe(target)\n                // щоб прибрати завантаження неіснуючих сторінок в кінці робимо умову\n                if (data.page === data.total_pages) {\n                    observer.unobbserve(target)\n                }\n    })\n    .catch(error => console.log(error));\n        }\n    })\n}\n// на екземплярі класа треба викликати цей метод\n\nfunction createMarkup(arr){\n    return arr.map(({ poster_path, title }) => `<li>\n    <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"${title}\">\n        <h2>${title}</h2>\n    </li>`).join('')\n}\n\nfunction getTranding(page=1) {\n    return fetch(`${BASE_URL}${ENDPOINT}?api_key=${API_KEY}&page=${page}`).then(resp => {\n        if (!resp.ok) {\n            throw new Error(resp.statusText)\n        }\n        return resp.json();\n    });\n}\n\n// щоб показати кнопку після першої розмітки додаємо в перший then {}\n// пагінація повинна віддавати номер поточної сторінки і загальну кількість сторінок - і нам треба перевірити на якій ми зараз\ngetTranding()\n    .then((data) => {\n        // відмальовка нашої сторінки\n            list.insertAdjacentHTML('beforeend', createMarkup(data.results))\n          // спостерігач спостерігай за нашим Target oject\n            observer.observe(target)\n    })\n    // просто подивитися, що прийшло\n    // .then(data => console.log(data))\n    .catch(error => console.log(error));"],"names":["BASE_URL","ENDPOINT","API_KEY","list","document","querySelector","target","currentPage","options","root","rootMargin","threshold","observer","IntersectionObserver","onLoad","entries","observer1","forEach","entry","isIntersecting","getTranding","then","data","insertAdjacentHTML","createMarkup","results","page","total_pages","unobbserve","catch","error","console","log","arr","map","param","poster_path","title","concat","join","arguments","length","fetch","resp","ok","Error","statusText","json","observe"],"version":3,"file":"06-infinity-scroll.e1cec9f1.js.map"}