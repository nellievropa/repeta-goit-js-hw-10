{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/news-components.js","<<jsx-config-pragma.js>>","src/js/components/load-more-btn.js","src/js/03-load-more-btn.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","const API_KEY = '15038c1cf1024f0f88ddd0a11fc0f440';\nconst BASE_URL = 'https://newsapi.org/v2';\nconst options = {\n    headers: {\n        Authorization: API_KEY,\n    },\n    };\n    // відповідає за збереження терміну запросу і номер групи(бо на сторінці ми отримаємо групу даних) \nexport default class NewsApiService {\n    constructor() {\nthis.searchQuery = '';\nthis.page = 1;\n    }\n// метод просто забираає статті з бекенду і повертає статті, що він забрав, у зовнішній код\n    fetchArticles() {\n        // console.log('До запросу: ', this);\n   \n            const url = `${BASE_URL}/everything?q=${this.searchQuery}&language=en&pageSize=8&page=${this.page}`;\n            \n          // робимо запит, і якщо він вдалий, то збільшуємо сторінку на 1(якщо не вдалий нам це не треба)\n        //   щоб мати можливість створити зовнішній вигляд статті у зовнішньому коді, нам  потрібно повернути цей fetch у зовнішній код командою return\n        return fetch(url, options)\n            .then(response => response.json())\n            .then(({ articles }) => {\n                // console.log(data);\n                // this.page += 1; винесли у зовнішній код\n                this.incrementPage();\n                console.log('Після запросу: ', this);\n\n                return articles;\n            });\n    }\n\n// можна винестиу зовнішній код додавання сторінки \n\nincrementPage() {\n    this.page += 1;\n}\n// сторінка повинна оновлюватись при новому запиті і починати шукати з 1-ї сторінки знову, тому робимо reset()\nresetPage() {\n    this.page = 1;\n}\n\n// контролює термін запроса: отримати і зберегти\n    // збережемо нашу змінну класу searchQuery\n    get query() {\n        return this.searchQuery;\n    }\n\n    set query(newQuery) {\n        this.searchQuery = newQuery;\n    }\n}",null,"export default class LoadMoreBtn {\n    constructor({ selector, hidden = false }) { \n        this.refs = this.getRefs(selector);\n\n        hidden && this.hide();\n    }\n\n\n    getRefs(selector) {\n    const refs = {};\n    refs.button = document.querySelector(selector);\n    refs.label = refs.button.querySelector('.label');\n    refs.spinner = refs.button.querySelector('.spinner');\n\n    return refs;\n}\n\nenable() {\n    this.refs.button.disabled = false;\n    this.refs.label.textContent = 'Показати більше';\n    this.refs.spinner.classList.add('is-hidden');\n\n    }\n    \n    disable() {\n    this.refs.button.disabled = true;\n    this.refs.label.textContent = 'Завантажуємо....';\n    this.refs.spinner.classList.remove('is-hidden');\n    }\n\n    show() {\n        this.refs.button.classList.remove('is-hidden');\n\n    }\n\n    hide() {\n        this.refs.button.classList.add('is-hidden');\n\n    }\n}\n\n","// import articlesTpl from '../templates/articles.hbs'\nimport '../css/common.css';\nimport NewsApiService from './news-components';\nimport LoadMoreBtn from './components/load-more-btn';\n\n\n\nconst refs = {\n    searchForm: document.querySelector('.js-search-form'),\n    articlesContainer: document.querySelector('.js-articles'),\n    // loadMoreBtn: document.querySelector('[data-action=\"load more\"]')\n};\n// створюємо екземпляр классу NewsApiService\nconst newsApiService = new NewsApiService();\n\n// для кнопки\nconst loadMoreBtn = new LoadMoreBtn({\n    selector: '[data-action=\"load more\"]',\n    // щоб зробити її невидимою, звертаємось до конструктора\n    hidden: true,\n});\n\nconst articlesList = document.querySelector(\".articles\");\nconsole.log(loadMoreBtn);\n\n// працюємо з кнопкою\n// додаем її методи, наприклад show() і потім додаємо їх там, де треба всередині функцій\n// loadMoreBtn.show();\n// loadMoreBtn.disable();\n\nrefs.searchForm.addEventListener('submit', onSearch);\n// refs.loadMoreBtn.addEventListener('click', onLoadMore);\n// щоб звернутися до кнопки тепер треба подивитися на її властивості в консолі і так по черзі всі їх і записати!\n// loadMoreBtn.refs.button.addEventListener('click', onLoadMore)\n// тут змінюєм назву функції onLoadMore на fetchArticles (щоб не дублювати код!)\nloadMoreBtn.refs.button.addEventListener('click', fetchArticles)\n// щоб прибрати цю глобальну змінну ми в класі NewsApiService створимо її заміну this.searchQuery = ''; і там же будемо її запам'ятовувати\n// let searchQuery ='';\n// і тоді ми можемо її прибрати звідси\n\nfunction onSearch(e) {\n    // щоб не перезавантажувалась сторінка робимоа preventDefault\n    e.preventDefault();\n\n// очищуємо сторінку перед новим запитом\n// clearArticlesContainer();\n\n// отримуєм доступ до форми, щоб читати запити\n// тут достукуємось також до цієї змінної\n//  searchQuery = e.currentTarget.elements.query.value\nnewsApiService.query = e.currentTarget.elements.query.value;\n\n// без GET i SET верхній запис буде виглядати так \n// newsApiService.searchQuery = e.currentTarget.elements.query.value; тоді треба замінити на searchQuery всюди\n\n// напишемо попередження про пусту строку\nif(newsApiService.query === '') {\n    return alert(`Please, make a request!`)\n    }\n    \n    loadMoreBtn.show();\n    // під час сабміту сторінка буде онвлюватись до 1-ї, коли ми пишемо новий запит\n    newsApiService.resetPage();\n    clearArticlesContainer();\n    fetchArticles();\n\n\n// При сабміті форми треба викликати сторінку на  newsapi.org\n    // const options = {\n    //     headers: {\n    //         Authorization: '15038c1cf1024f0f88ddd0a11fc0f440',\n    //     },\n    //     };\n        \n    //     const url = `https://newsapi.org/v2/everything?q=${searchQuery}&language=en&pageSize=8&page=1`;\n      \n    //     fetch(url, options)\n    //     .then(r => r.json)\n    //     .then(console.log());\n    // всю цю логіку виносимо в окремий спеціально створений файл news-components\n    // і після того, як ми створили екземпляр классу NewsApiService і викликали його вище, звертаємось до нього\n    // а  searchQuery  передаємо йому як аргумент\n    // тут додаємо articles\n    // loadMoreBtn.disable();\n    // newsApiService.fetchArticles().then(articles => {\n        \n    //     appendArticlesMarkup(articles);\n    //     // якщо у нас все добре то включаємо кнопку знову\n    //     loadMoreBtn.enable();\n    // });\n    // однаковий код винесли в окрему функцію і додали її сюди зверху\n}\n\n// ми хочемо підгружати наступні сторінки при натисканні кнопки \"Показати ще\"\n// робим те саме, АЛЕ маємо проблему як достукатися до змінної const searchQuery ,якщо вона існує тільки в попередній функції?\n// тобто під час сабміту (натискання кнопки \"Пошук\") ми повинні зберігати десь ці данні, щоб потім їх взяти звідти! використовуємо LET\nfunction onLoadMore() {\n    // спочатку відключимо кнопку\n    // loadMoreBtn.disable();\n    // а потім однаковий код винесемо в окрему функцію\n\n    // const options = {\n    //     headers: {\n    //         Authorization: '15038c1cf1024f0f88ddd0a11fc0f440',\n    //     },\n    //     };\n        \n    //     const url = `https://newsapi.org/v2/everything?q=${searchQuery}&language=en&pageSize=8&page=1`;\n        \n        \n    //     fetch(url, options)\n    //     .then(r => r.json)\n    //     .then(console.log());\n    // в цій функції все робимо аналогічно\n    // а тут знову ключимо кнопку\n    // newsApiService.fetchArticles().then(articles => {\n    //     appendArticlesMarkup(articles);\n    //     loadMoreBtn.enable();\n    // });\n    // однаковий код винесемо в окрему функцію\n}\n\n// однаковий код виносимо в окрему функцію\nfunction fetchArticles(argument) {\n      loadMoreBtn.disable();\n    newsApiService.fetchArticles().then(articles => {\n        appendArticlesMarkup(articles);\n        loadMoreBtn.enable();\n    });\n}\n\n\n// що створити розмітку зробимо функцію\n\nfunction appendArticlesMarkup(articles) {\n    // refs.articlesContainer.insertAdjacentHTML('beforeend', articlesTpl(articles));\n    const markup = articles\n    .map(({ urlToImage, title, author, description }) => {\n      return `<li>\n      <img src=\"${urlToImage}\" alt=\"\" width=\"480\">\n      <h2>${title}</h2>\n      <p>Posted by: ${author}</p>\n      <p>${description}</p>\n\n       </li>`;\n    })\n    .join(\"\");\n    // articlesList.innerHTML = markup;\n    articlesList.insertAdjacentHTML(\"beforeend\", markup)\n}\n\n// при кожному новому запиті треба очищати контайнер, щоб виводилось не в кінці попереднього запиту, а зверху і знову\n\nfunction clearArticlesContainer() {\n    refs.articlesContainer.innerHTML = '';\n}\n\n\n\n\n"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$d789a2f404dcc528$var$options","headers","Authorization","$d789a2f404dcc528$export$2e2bcd8739ae039","NewsApiService","this","searchQuery","page","url","concat","fetch","then","response","json","param","articles","_this","incrementPage","console","log","newQuery","$a59411585e32db69$export$2e2bcd8739ae039","LoadMoreBtn","selector","_hidden","hidden","refs","getRefs","hide","button","document","querySelector","label","spinner","disabled","textContent","classList","add","remove","$b4ead9e99a445bb4$var$refs","searchForm","articlesContainer","$b4ead9e99a445bb4$var$newsApiService","$b4ead9e99a445bb4$var$loadMoreBtn","$b4ead9e99a445bb4$var$articlesList","$b4ead9e99a445bb4$var$fetchArticles","argument","disable","fetchArticles","markup","map","urlToImage","title","author","description","join","insertAdjacentHTML","$b4ead9e99a445bb4$var$appendArticlesMarkup","enable","addEventListener","e","preventDefault","query","currentTarget","elements","alert","show","resetPage","innerHTML"],"version":3,"file":"03-load-more-btn.99befc42.js.map"}